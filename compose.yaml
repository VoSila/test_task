services:
  php:
    image: ${IMAGES_PREFIX:-}app-php
    restart: unless-stopped
    environment:
      SERVER_NAME: ${SERVER_NAME:-localhost}, php:80
      MERCURE_PUBLISHER_JWT_KEY: ${CADDY_MERCURE_JWT_SECRET:-!ChangeThisMercureHubJWTSecretKey!}
      MERCURE_SUBSCRIBER_JWT_KEY: ${CADDY_MERCURE_JWT_SECRET:-!ChangeThisMercureHubJWTSecretKey!}
      TRUSTED_PROXIES: ${TRUSTED_PROXIES:-127.0.0.0/8,10.0.0.0/8,172.16.0.0/12,192.168.0.0/16}
      TRUSTED_HOSTS: ${TRUSTED_HOSTS:-^$${SERVER_NAME:-example\.com|localhost}|php$$}
      # Run "composer require symfony/orm-pack" to install and configure Doctrine ORM
      DATABASE_URL: mysql://dev:dev@mysql:3306/test_task?serverVersion=8.0.32&charset=utf8mb4
      # Run "composer require symfony/mercure-bundle" to install and configure the Mercure integration
      MERCURE_URL: ${CADDY_MERCURE_URL:-http://php/.well-known/mercure}
      MERCURE_PUBLIC_URL: ${CADDY_MERCURE_PUBLIC_URL:-https://$${SERVER_NAME:-localhost}/.well-known/mercure}
      MERCURE_JWT_SECRET: ${CADDY_MERCURE_JWT_SECRET:-!ChangeThisMercureHubJWTSecretKey!}
      # The two next lines can be removed after initial installation
      SYMFONY_VERSION: ${SYMFONY_VERSION:-}
      STABILITY: ${STABILITY:-stable}
    volumes:
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      - mysql
      - rabbitmq
    ports:
      # HTTP
      - target: 80
        published: ${HTTP_PORT:-80}
        protocol: tcp
      # HTTPS
      - target: 443
        published: ${HTTPS_PORT:-443}
        protocol: tcp
      # HTTP/3
      - target: 443
        published: ${HTTP3_PORT:-443}
        protocol: udp
    networks:
      - test_task-network

  mysql:
      image: mysql:8.0
      container_name: mysql
      restart: unless-stopped
      tty: true
      environment:
          MYSQL_HOST: mysql
          MYSQL_DATABASE: test_task
          MYSQL_ROOT_PASSWORD: root
          MYSQL_USER: dev
          MYSQL_PASSWORD: dev
      volumes:
          - "db-data:/var/lib/mysql"
          - "./docker/mysql/my.cnf:/etc/mysql/my.cnf"
      ports:
          - "3306:3306"
      networks:
      - test_task-network

  rabbitmq:
    container_name: "rabbitmq"
    image: 'bitnami/rabbitmq:latest'
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - test_task-network

  redis:
    image: redis:6.2.4
    container_name: redis
    restart: always
    command: redis-server
    ports:
      - "6379:6379"
    networks:
      - test_task-network

networks:
  test_task-network:
    driver: bridge

volumes:
  caddy_data:
  caddy_config:
  db-data:
    driver: local
